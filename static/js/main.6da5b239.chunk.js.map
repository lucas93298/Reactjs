{"version":3,"sources":["img/chip.png","Components/FormDates.js","Components/FormDatesTwo.js","Components/Form.js","Components/Tarjeta.js","App.js","serviceWorker.js","Components/FadeTransition/index.js","index.js"],"names":["module","exports","FormDates","numero","nombre","className","name","onChange","type","maxlength","placeholder","FormDatesTwo","mes","año","value","Form","number","year","month","onSubmit","Grid","container","item","xs","Box","Button","style","size","variant","color","Tarjeta","src","chip","App","props","e","setState","target","preventDefault","onChangeNumber","onChangeName","invisible","isVisible","visible","state","this","onClick","Component","Boolean","window","location","hostname","match","defaultStyle","transition","opacity","transitionStyles","entering","entered","exiting","exited","Fade","inProp","in","Transition","timeout","PureComponent","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,kC,yMCiB5BC,G,YAfG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,OAAOC,EAAW,EAAXA,OAClB,OACO,kBAAC,WAAD,KACI,yBAAKC,UAAU,cACX,oDACA,2BAAOC,KAAK,SAASC,SAAUJ,EAAQK,KAAK,SAASC,UAAU,IAAIC,YAAY,SAASL,UAAU,kBAEtG,yBAAKA,UAAU,cACX,oDACA,2BAAOC,KAAK,SAASC,SAAUH,EAAQI,KAAK,OAAOE,YAAY,SAASL,UAAU,qBCmC3FM,EA5CM,SAAC,GAAe,IAAdC,EAAa,EAAbA,IAAIC,EAAS,EAATA,SACnB,OACQ,kBAAC,WAAD,KACI,yBAAKR,UAAU,cACX,yBAAKA,UAAU,SACb,8CAEF,yBAAKA,UAAU,YACb,4BAAQE,SAAUK,EAAKP,UAAU,eAAeC,KAAK,MAAMI,YAAY,OACrE,4BAAQI,MAAM,SAAd,SACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,SACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,YAAd,cAEF,4BAAQP,SAAUM,EAAMR,UAAU,eAAeC,KAAK,SAAMI,YAAY,UACtE,4BAAQI,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,SAGF,yBAAKT,UAAU,cAEb,2BAAOG,KAAK,OAAOE,YAAY,MAAML,UAAU,sB,wBCG5DU,EApCF,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,OAAOV,EAA+B,EAA/BA,KAAKW,EAA0B,EAA1BA,KAAKC,EAAqB,EAArBA,MAAMC,EAAe,EAAfA,SACrC,OACE,yBAAKd,UAAU,gBACb,0BAAMc,SAAUA,GAChB,kBAAC,EAAD,CACEhB,OAAQa,EACRZ,OAAQE,IAER,kBAAC,EAAD,CACEM,IAAKM,EACLL,SAAKI,IAEP,yBAAKZ,UAAU,cACb,kBAACe,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,MAAO,CAAE,MAAS,QAClBC,KAAK,QACLC,QAAQ,WACRC,MAAM,aAJR,iB,iBCyBDC,EAzCC,SAAC,GAA6B,IAA5B1B,EAA2B,EAA3BA,OAAOD,EAAoB,EAApBA,OAAOS,EAAa,EAAbA,IAAIC,EAAS,EAATA,SAC5B,OACI,yBAAKR,UAAU,YACnB,yBAAKA,UAAU,QACf,yBAAKA,UAAU,MAAM0B,IAAKC,MACxB,yBAAK3B,UAAU,YACb,8CAGA,4BAAKF,IAEP,yBAAKE,UAAU,gBAGb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,QACX,8CAGA,4BAAKD,IAET,yBAAKC,UAAU,SACb,0CAGA,2BACE,8BAAOO,GADT,IAEE,8BAAOC,U,kCCvBJoB,E,kDACnB,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAYT3B,SAAW,SAAC4B,GACX,EAAKC,SAAL,eACGD,EAAEE,OAAO/B,KAAQ6B,EAAEE,OAAOvB,SAfX,EAkBlBK,SAAW,SAACgB,GACVA,EAAEG,kBAnBc,EAqBlBC,eAAiB,SAACJ,GAChB,IAAMnB,EAAUmB,EAAEE,OAAOvB,MACzB,EAAKsB,SAAS,CACRjC,OAAQa,IAEC,KAAXA,GACF,EAAKoB,SAAS,CAACjC,OAAQ,eA3BT,EA+BhBqC,aAAe,SAACL,GACd,IAAM7B,EAAQ6B,EAAEE,OAAOvB,MACvB,EAAKsB,SAAS,CACRhC,OAAQE,IAED,KAATA,GACF,EAAK8B,SAAS,CAAChC,OAAQ,qBArCX,EA0CpBqC,UAAY,WACV,EAAKL,SAAS,CAACM,WAAW,KA3CR,EA6CpBC,QAAU,WACL,EAAKC,MAAMF,UACZ,EAAKN,SAAS,CAACM,WAAW,IAE1B,EAAKN,SAAS,CAACM,WAAW,KA/CzB,EAAKE,MAAQ,CACVzC,OAAQ,YACRC,OAAQ,kBACRQ,IAAK,KACLC,SAAK,KACL6B,WAAW,GAPC,E,qDAsDlB,OAEA,yBAAKrC,UAAU,WAEb,yBAAKA,UAAU,WACb,kBAAC,EAAD,CACCF,OAAQ0C,KAAKD,MAAMzC,OACnBC,OAAQyC,KAAKD,MAAMxC,OACnBQ,IAAKiC,KAAKD,MAAMhC,IAChBC,SAAKgC,KAAKD,MAAM/B,WAEjB,4BAAQiC,QAASD,KAAKF,QAAStC,UAAU,oBAGtCwC,KAAKD,MAAMF,UAAY,kBAAC,IAAD,MAAqB,kBAAC,IAAD,OAK5CG,KAAKD,MAAMF,WAAa,kBAAC,EAAD,CACtB1B,OAAQ6B,KAAKN,eACbjC,KAAMuC,KAAKL,aACXtB,MAAO2B,KAAKtC,SACZU,KAAM4B,KAAKtC,SACXY,SAAU0B,KAAK1B,iB,GA/EO4B,aCIbC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oBCbAC,EAAe,CACnBC,WAAW,WAAD,OAHK,IAGL,kBACVC,QAAS,GAGLC,EAAmB,CACvBC,SAAU,CAAEF,QAAS,GACrBG,QAAU,CAAEH,QAAS,GACrBI,QAAU,CAAEJ,QAAS,GACrBK,OAAS,CAAEL,QAAS,IAGhBM,EAAO,SAAC,GAAD,IAAOC,EAAP,EAAGC,GAAH,OACX,kBAACC,EAAA,EAAD,CAAYD,GAAID,EAAQG,QAfT,MAgBZ,SAAArB,GAAK,OACJ,yBAAKlB,MAAK,2BACL2B,GACAG,EAAiBZ,KAEpB,yBAAKb,IAAK,yHAMWmC,gBCvB7BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SFwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6da5b239.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chip.e36bb1c0.png\";","import React, {Fragment} from 'react';\r\n\r\nconst FormDates = ({numero,nombre}) =>{        \r\n         return( \r\n                <Fragment>\r\n                    <div className=\"form-group\">\r\n                        <label>Numero de tarjeta</label>\r\n                        <input name=\"numero\" onChange={numero} type=\"number\" maxlength=\"4\" placeholder=\"numero\" className=\"form-control\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Nombre de tarjeta</label>\r\n                        <input name=\"nombre\" onChange={nombre} type=\"text\" placeholder=\"nombre\" className=\"form-control\"/>\r\n                    </div>\r\n                </Fragment>\r\n        )      \r\n        }\r\n\r\nexport default FormDates;","\r\nimport React,{Fragment} from 'react';\r\nconst FormDatesTwo = ({mes,año}) => {\r\n        return(\r\n                <Fragment>\r\n                    <div className=\"groupThree\">\r\n                        <div className=\"label\">\r\n                          <label>Expiracion</label>\r\n                        </div>\r\n                        <div className=\"groupTwo\">\r\n                          <select onChange={mes} className=\"form-control\" name=\"mes\" placeholder=\"Mes\">\r\n                            <option value=\"enero\">enero</option>\r\n                            <option value=\"febrero\">febrero</option>\r\n                            <option value=\"marzo\">marzo</option>\r\n                            <option value=\"marzo\">marzo</option>\r\n                            <option value=\"abri\">abril</option>\r\n                            <option value=\"mayo\">mayo</option>\r\n                            <option value=\"junio\">junio</option>\r\n                            <option value=\"julio\">julio</option>\r\n                            <option value=\"agosto\">agosto</option>\r\n                            <option value=\"septiembre\">septiembre</option>\r\n                            <option value=\"octubre\">octubre</option>\r\n                            <option value=\"noviembre\">noviembre</option>\r\n                            <option value=\"diciebre\">diciembre</option>\r\n                          </select>\r\n                          <select onChange={año}  className=\"form-control\" name=\"año\" placeholder=\"Año\">\r\n                            <option value=\"2020\">2020</option>\r\n                            <option value=\"2021\">2021</option>\r\n                            <option value=\"2022\">2022</option>\r\n                            <option value=\"2023\">2023</option>\r\n                            <option value=\"2024\">2024</option>\r\n                            <option value=\"2025\">2025</option>\r\n                            <option value=\"2026\">2026</option>\r\n                          </select>\r\n                          \r\n                          <div className=\"form-group\">\r\n                            \r\n                            <input type=\"text\" placeholder=\"CCV\" className=\"form-control\"/>\r\n                          </div>\r\n                        </div> \r\n                      </div>\r\n                </Fragment>\r\n        )  \r\n        }\r\n\r\n\r\nexport default FormDatesTwo;","import React from 'react'\r\nimport FormDates from './FormDates'\r\nimport FormDatesTwo from './FormDatesTwo'\r\nimport {Button, Grid, Box} from '@material-ui/core'\r\nconst Form = ({ number,name,year,month,onSubmit }) => {\r\n  return ( \r\n    <div className=\"content-form\">\r\n      <form onSubmit={onSubmit}>\r\n      <FormDates\r\n        numero={number}\r\n        nombre={name}\r\n      />\r\n        <FormDatesTwo\r\n          mes={month}\r\n          año={year}\r\n        />\r\n        <div className=\"form-group\">\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Box>\r\n                <Button\r\n                  style={{ \"width\": \"100%\" }}\r\n                  size=\"large\"\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  >ENVIAR\r\n                </Button>\r\n                    \r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport chip from '../img/chip.png';\r\n\r\n\r\nconst Tarjeta = ({nombre,numero,mes,año}) => {\r\n        return(\r\n            <div className=\"tarjeta \">\r\n        <div className=\"date\">\r\n        <img className=\"img\" src={chip}/>\r\n          <div className=\"groupOne\">\r\n            <h4>\r\n              Numero Tarjeta\r\n            </h4>\r\n            <h2>{numero}</h2>\r\n          </div>\r\n          <div className=\"contentGroup\">\r\n            \r\n          \r\n            <div className=\"groupTwo\">\r\n              <div className=\"left\">\r\n                  <h4>\r\n                    Nombre Tarjeta\r\n                  </h4>\r\n                  <h2>{nombre}</h2>\r\n              </div>\r\n              <div className=\"right\">\r\n                <h4>\r\n                  Expiracion\r\n                </h4>\r\n                <p>\r\n                  <span>{mes}</span>/\r\n                  <span>{año}</span>\r\n                </p>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n            \r\n        )\r\n    }\r\n\r\n\r\nexport default Tarjeta;","import React, {Component}  from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from './Components/Form'\nimport Tarjeta from './Components/Tarjeta'\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\nexport default class App extends Component{\n  constructor(props){\n    super(props)\n     this.state = {\n        numero: '#########',\n        nombre: 'Lucas Fernandez',\n        mes: 'MM',\n        año: 'AA',\n        isVisible: false\n  }\n\n  }\n    \n\n onChange = (e) => {\n  this.setState({\n    [e.target.name] : e.target.value\n    })\n  }\n  onSubmit = (e) =>{\n    e.preventDefault();\n  } \n  onChangeNumber = (e) => {\n    const number =  e.target.value\n    this.setState({\n          numero: number\n      })\n     if(number === ''){\n      this.setState({numero: \"#########\"})\n     }\n      \n    }\n    onChangeName = (e) => {\n      const name =  e.target.value\n      this.setState({\n            nombre: name\n        })\n       if(name === ''){\n        this.setState({nombre: \"Lucas Fernandez\"})\n       }\n        \n      }\n\ninvisible = () =>{\n  this.setState({isVisible: false})\n}    \nvisible = () =>{\n  if(this.state.isVisible){\n    this.setState({isVisible: false})\n  }else{\n    this.setState({isVisible: true})\n  } \n}\nrender(){\n  \n  return (\n  \n  <div className=\"content\">\n    \n    <div className=\"contain\">\n      <Tarjeta\n       numero={this.state.numero}\n       nombre={this.state.nombre}\n       mes={this.state.mes}\n       año={this.state.año}\n       />\n      <button onClick={this.visible} className=\"btnP btn-warning\">\n        \n      \n        {this.state.isVisible ? <ArrowUpwardIcon/> : <ArrowDownwardIcon/> }\n        \n        \n        </button>\n      \n        {this.state.isVisible && <Form\n           number={this.onChangeNumber}\n           name={this.onChangeName}\n           month={this.onChange}\n           year={this.onChange}\n           onSubmit={this.onSubmit}\n         />}\n      </div>\n    </div>\n  \n    \n    \n    );\n}\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { PureComponent } from 'react';\r\nimport { Transition } from 'react-transition-group';\r\n\r\nconst duration = 300;\r\n\r\nconst defaultStyle = {\r\n  transition: `opacity ${duration}ms ease-in-out`,\r\n  opacity: 0,\r\n}\r\n\r\nconst transitionStyles = {\r\n  entering: { opacity: 1 },\r\n  entered:  { opacity: 1 },\r\n  exiting:  { opacity: 0 },\r\n  exited:  { opacity: 0 },\r\n};\r\n\r\nconst Fade = ({ in: inProp }) => (\r\n  <Transition in={inProp} timeout={duration}>\r\n    {state => (\r\n      <div style={{\r\n        ...defaultStyle,\r\n        ...transitionStyles[state]\r\n      }}>\r\n        <img src={\"https://images.pexels.com/photos/2254030/pexels-photo-2254030.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\"} />\r\n      </div>\r\n    )}\r\n  </Transition>\r\n);\r\n\r\nclass FadeTransition extends PureComponent {\r\n  state = {\r\n    show: false\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <>\r\n          <button onClick={() =>this.setState((state) => ({show: !state.show}) )}>\r\n            Click to Enter\r\n          </button>\r\n          <Fade in={this.state.show}/>\r\n        </>\r\n      );\r\n    }\r\n}\r\n\r\nexport default FadeTransition;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport FadeTransition from './Components/FadeTransition';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}